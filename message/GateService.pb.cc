// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GateService.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "GateService.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace GateMessage {

namespace {

const ::google::protobuf::Descriptor* GET_PROXY_MSG_REQUEST_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GET_PROXY_MSG_REQUEST_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_GateService_2eproto() {
  protobuf_AddDesc_GateService_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "GateService.proto");
  GOOGLE_CHECK(file != NULL);
  GET_PROXY_MSG_REQUEST_descriptor_ = file->message_type(0);
  static const int GET_PROXY_MSG_REQUEST_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GET_PROXY_MSG_REQUEST, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GET_PROXY_MSG_REQUEST, proxy_),
  };
  GET_PROXY_MSG_REQUEST_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GET_PROXY_MSG_REQUEST_descriptor_,
      GET_PROXY_MSG_REQUEST::default_instance_,
      GET_PROXY_MSG_REQUEST_offsets_,
      -1,
      -1,
      -1,
      sizeof(GET_PROXY_MSG_REQUEST),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GET_PROXY_MSG_REQUEST, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GET_PROXY_MSG_REQUEST, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_GateService_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GET_PROXY_MSG_REQUEST_descriptor_, &GET_PROXY_MSG_REQUEST::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_GateService_2eproto() {
  delete GET_PROXY_MSG_REQUEST::default_instance_;
  delete GET_PROXY_MSG_REQUEST_reflection_;
}

void protobuf_AddDesc_GateService_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021GateService.proto\022\013GateMessage\"3\n\025GET_"
    "PROXY_MSG_REQUEST\022\013\n\003uid\030\001 \001(\t\022\r\n\005proxy\030"
    "\002 \001(\tb\006proto3", 93);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GateService.proto", &protobuf_RegisterTypes);
  GET_PROXY_MSG_REQUEST::default_instance_ = new GET_PROXY_MSG_REQUEST();
  GET_PROXY_MSG_REQUEST::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_GateService_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_GateService_2eproto {
  StaticDescriptorInitializer_GateService_2eproto() {
    protobuf_AddDesc_GateService_2eproto();
  }
} static_descriptor_initializer_GateService_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GET_PROXY_MSG_REQUEST::kUidFieldNumber;
const int GET_PROXY_MSG_REQUEST::kProxyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GET_PROXY_MSG_REQUEST::GET_PROXY_MSG_REQUEST()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GateMessage.GET_PROXY_MSG_REQUEST)
}

void GET_PROXY_MSG_REQUEST::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GET_PROXY_MSG_REQUEST::GET_PROXY_MSG_REQUEST(const GET_PROXY_MSG_REQUEST& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GateMessage.GET_PROXY_MSG_REQUEST)
}

void GET_PROXY_MSG_REQUEST::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proxy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GET_PROXY_MSG_REQUEST::~GET_PROXY_MSG_REQUEST() {
  // @@protoc_insertion_point(destructor:GateMessage.GET_PROXY_MSG_REQUEST)
  SharedDtor();
}

void GET_PROXY_MSG_REQUEST::SharedDtor() {
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proxy_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GET_PROXY_MSG_REQUEST::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GET_PROXY_MSG_REQUEST::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GET_PROXY_MSG_REQUEST_descriptor_;
}

const GET_PROXY_MSG_REQUEST& GET_PROXY_MSG_REQUEST::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GateService_2eproto();
  return *default_instance_;
}

GET_PROXY_MSG_REQUEST* GET_PROXY_MSG_REQUEST::default_instance_ = NULL;

GET_PROXY_MSG_REQUEST* GET_PROXY_MSG_REQUEST::New(::google::protobuf::Arena* arena) const {
  GET_PROXY_MSG_REQUEST* n = new GET_PROXY_MSG_REQUEST;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GET_PROXY_MSG_REQUEST::Clear() {
// @@protoc_insertion_point(message_clear_start:GateMessage.GET_PROXY_MSG_REQUEST)
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proxy_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GET_PROXY_MSG_REQUEST::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GateMessage.GET_PROXY_MSG_REQUEST)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string uid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uid().data(), this->uid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GateMessage.GET_PROXY_MSG_REQUEST.uid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_proxy;
        break;
      }

      // optional string proxy = 2;
      case 2: {
        if (tag == 18) {
         parse_proxy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_proxy()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->proxy().data(), this->proxy().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GateMessage.GET_PROXY_MSG_REQUEST.proxy"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GateMessage.GET_PROXY_MSG_REQUEST)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GateMessage.GET_PROXY_MSG_REQUEST)
  return false;
#undef DO_
}

void GET_PROXY_MSG_REQUEST::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GateMessage.GET_PROXY_MSG_REQUEST)
  // optional string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GateMessage.GET_PROXY_MSG_REQUEST.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uid(), output);
  }

  // optional string proxy = 2;
  if (this->proxy().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->proxy().data(), this->proxy().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GateMessage.GET_PROXY_MSG_REQUEST.proxy");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->proxy(), output);
  }

  // @@protoc_insertion_point(serialize_end:GateMessage.GET_PROXY_MSG_REQUEST)
}

::google::protobuf::uint8* GET_PROXY_MSG_REQUEST::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GateMessage.GET_PROXY_MSG_REQUEST)
  // optional string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GateMessage.GET_PROXY_MSG_REQUEST.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }

  // optional string proxy = 2;
  if (this->proxy().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->proxy().data(), this->proxy().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GateMessage.GET_PROXY_MSG_REQUEST.proxy");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->proxy(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:GateMessage.GET_PROXY_MSG_REQUEST)
  return target;
}

int GET_PROXY_MSG_REQUEST::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:GateMessage.GET_PROXY_MSG_REQUEST)
  int total_size = 0;

  // optional string uid = 1;
  if (this->uid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uid());
  }

  // optional string proxy = 2;
  if (this->proxy().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->proxy());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GET_PROXY_MSG_REQUEST::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GateMessage.GET_PROXY_MSG_REQUEST)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GET_PROXY_MSG_REQUEST* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GET_PROXY_MSG_REQUEST>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GateMessage.GET_PROXY_MSG_REQUEST)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GateMessage.GET_PROXY_MSG_REQUEST)
    MergeFrom(*source);
  }
}

void GET_PROXY_MSG_REQUEST::MergeFrom(const GET_PROXY_MSG_REQUEST& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GateMessage.GET_PROXY_MSG_REQUEST)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.uid().size() > 0) {

    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  if (from.proxy().size() > 0) {

    proxy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proxy_);
  }
}

void GET_PROXY_MSG_REQUEST::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GateMessage.GET_PROXY_MSG_REQUEST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GET_PROXY_MSG_REQUEST::CopyFrom(const GET_PROXY_MSG_REQUEST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GateMessage.GET_PROXY_MSG_REQUEST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GET_PROXY_MSG_REQUEST::IsInitialized() const {

  return true;
}

void GET_PROXY_MSG_REQUEST::Swap(GET_PROXY_MSG_REQUEST* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GET_PROXY_MSG_REQUEST::InternalSwap(GET_PROXY_MSG_REQUEST* other) {
  uid_.Swap(&other->uid_);
  proxy_.Swap(&other->proxy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GET_PROXY_MSG_REQUEST::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GET_PROXY_MSG_REQUEST_descriptor_;
  metadata.reflection = GET_PROXY_MSG_REQUEST_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GET_PROXY_MSG_REQUEST

// optional string uid = 1;
void GET_PROXY_MSG_REQUEST::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GET_PROXY_MSG_REQUEST::uid() const {
  // @@protoc_insertion_point(field_get:GateMessage.GET_PROXY_MSG_REQUEST.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GET_PROXY_MSG_REQUEST::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GateMessage.GET_PROXY_MSG_REQUEST.uid)
}
 void GET_PROXY_MSG_REQUEST::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GateMessage.GET_PROXY_MSG_REQUEST.uid)
}
 void GET_PROXY_MSG_REQUEST::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GateMessage.GET_PROXY_MSG_REQUEST.uid)
}
 ::std::string* GET_PROXY_MSG_REQUEST::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:GateMessage.GET_PROXY_MSG_REQUEST.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GET_PROXY_MSG_REQUEST::release_uid() {
  // @@protoc_insertion_point(field_release:GateMessage.GET_PROXY_MSG_REQUEST.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GET_PROXY_MSG_REQUEST::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:GateMessage.GET_PROXY_MSG_REQUEST.uid)
}

// optional string proxy = 2;
void GET_PROXY_MSG_REQUEST::clear_proxy() {
  proxy_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GET_PROXY_MSG_REQUEST::proxy() const {
  // @@protoc_insertion_point(field_get:GateMessage.GET_PROXY_MSG_REQUEST.proxy)
  return proxy_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GET_PROXY_MSG_REQUEST::set_proxy(const ::std::string& value) {
  
  proxy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GateMessage.GET_PROXY_MSG_REQUEST.proxy)
}
 void GET_PROXY_MSG_REQUEST::set_proxy(const char* value) {
  
  proxy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GateMessage.GET_PROXY_MSG_REQUEST.proxy)
}
 void GET_PROXY_MSG_REQUEST::set_proxy(const char* value, size_t size) {
  
  proxy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GateMessage.GET_PROXY_MSG_REQUEST.proxy)
}
 ::std::string* GET_PROXY_MSG_REQUEST::mutable_proxy() {
  
  // @@protoc_insertion_point(field_mutable:GateMessage.GET_PROXY_MSG_REQUEST.proxy)
  return proxy_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GET_PROXY_MSG_REQUEST::release_proxy() {
  // @@protoc_insertion_point(field_release:GateMessage.GET_PROXY_MSG_REQUEST.proxy)
  
  return proxy_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GET_PROXY_MSG_REQUEST::set_allocated_proxy(::std::string* proxy) {
  if (proxy != NULL) {
    
  } else {
    
  }
  proxy_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proxy);
  // @@protoc_insertion_point(field_set_allocated:GateMessage.GET_PROXY_MSG_REQUEST.proxy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace GateMessage

// @@protoc_insertion_point(global_scope)

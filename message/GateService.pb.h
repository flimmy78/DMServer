// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GateService.proto

#ifndef PROTOBUF_GateService_2eproto__INCLUDED
#define PROTOBUF_GateService_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace GateMessage {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_GateService_2eproto();
void protobuf_AssignDesc_GateService_2eproto();
void protobuf_ShutdownFile_GateService_2eproto();

class GET_PROXY_MSG_REQUEST;

// ===================================================================

class GET_PROXY_MSG_REQUEST : public ::google::protobuf::Message {
 public:
  GET_PROXY_MSG_REQUEST();
  virtual ~GET_PROXY_MSG_REQUEST();

  GET_PROXY_MSG_REQUEST(const GET_PROXY_MSG_REQUEST& from);

  inline GET_PROXY_MSG_REQUEST& operator=(const GET_PROXY_MSG_REQUEST& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GET_PROXY_MSG_REQUEST& default_instance();

  void Swap(GET_PROXY_MSG_REQUEST* other);

  // implements Message ----------------------------------------------

  inline GET_PROXY_MSG_REQUEST* New() const { return New(NULL); }

  GET_PROXY_MSG_REQUEST* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GET_PROXY_MSG_REQUEST& from);
  void MergeFrom(const GET_PROXY_MSG_REQUEST& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GET_PROXY_MSG_REQUEST* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // optional string proxy = 2;
  void clear_proxy();
  static const int kProxyFieldNumber = 2;
  const ::std::string& proxy() const;
  void set_proxy(const ::std::string& value);
  void set_proxy(const char* value);
  void set_proxy(const char* value, size_t size);
  ::std::string* mutable_proxy();
  ::std::string* release_proxy();
  void set_allocated_proxy(::std::string* proxy);

  // @@protoc_insertion_point(class_scope:GateMessage.GET_PROXY_MSG_REQUEST)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::google::protobuf::internal::ArenaStringPtr proxy_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_GateService_2eproto();
  friend void protobuf_AssignDesc_GateService_2eproto();
  friend void protobuf_ShutdownFile_GateService_2eproto();

  void InitAsDefaultInstance();
  static GET_PROXY_MSG_REQUEST* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GET_PROXY_MSG_REQUEST

// optional string uid = 1;
inline void GET_PROXY_MSG_REQUEST::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GET_PROXY_MSG_REQUEST::uid() const {
  // @@protoc_insertion_point(field_get:GateMessage.GET_PROXY_MSG_REQUEST.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GET_PROXY_MSG_REQUEST::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GateMessage.GET_PROXY_MSG_REQUEST.uid)
}
inline void GET_PROXY_MSG_REQUEST::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GateMessage.GET_PROXY_MSG_REQUEST.uid)
}
inline void GET_PROXY_MSG_REQUEST::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GateMessage.GET_PROXY_MSG_REQUEST.uid)
}
inline ::std::string* GET_PROXY_MSG_REQUEST::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:GateMessage.GET_PROXY_MSG_REQUEST.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GET_PROXY_MSG_REQUEST::release_uid() {
  // @@protoc_insertion_point(field_release:GateMessage.GET_PROXY_MSG_REQUEST.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GET_PROXY_MSG_REQUEST::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:GateMessage.GET_PROXY_MSG_REQUEST.uid)
}

// optional string proxy = 2;
inline void GET_PROXY_MSG_REQUEST::clear_proxy() {
  proxy_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GET_PROXY_MSG_REQUEST::proxy() const {
  // @@protoc_insertion_point(field_get:GateMessage.GET_PROXY_MSG_REQUEST.proxy)
  return proxy_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GET_PROXY_MSG_REQUEST::set_proxy(const ::std::string& value) {
  
  proxy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GateMessage.GET_PROXY_MSG_REQUEST.proxy)
}
inline void GET_PROXY_MSG_REQUEST::set_proxy(const char* value) {
  
  proxy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GateMessage.GET_PROXY_MSG_REQUEST.proxy)
}
inline void GET_PROXY_MSG_REQUEST::set_proxy(const char* value, size_t size) {
  
  proxy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GateMessage.GET_PROXY_MSG_REQUEST.proxy)
}
inline ::std::string* GET_PROXY_MSG_REQUEST::mutable_proxy() {
  
  // @@protoc_insertion_point(field_mutable:GateMessage.GET_PROXY_MSG_REQUEST.proxy)
  return proxy_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GET_PROXY_MSG_REQUEST::release_proxy() {
  // @@protoc_insertion_point(field_release:GateMessage.GET_PROXY_MSG_REQUEST.proxy)
  
  return proxy_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GET_PROXY_MSG_REQUEST::set_allocated_proxy(::std::string* proxy) {
  if (proxy != NULL) {
    
  } else {
    
  }
  proxy_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proxy);
  // @@protoc_insertion_point(field_set_allocated:GateMessage.GET_PROXY_MSG_REQUEST.proxy)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace GateMessage

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GateService_2eproto__INCLUDED

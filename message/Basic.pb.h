// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Basic.proto

#ifndef PROTOBUF_Basic_2eproto__INCLUDED
#define PROTOBUF_Basic_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_Basic_2eproto();
void protobuf_AssignDesc_Basic_2eproto();
void protobuf_ShutdownFile_Basic_2eproto();

class CommonRequest;
class HeartBeat;
class ResponseHeader;

enum UserSex {
  female = 0,
  male = 1,
  unknown = 2,
  UserSex_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UserSex_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UserSex_IsValid(int value);
const UserSex UserSex_MIN = female;
const UserSex UserSex_MAX = unknown;
const int UserSex_ARRAYSIZE = UserSex_MAX + 1;

const ::google::protobuf::EnumDescriptor* UserSex_descriptor();
inline const ::std::string& UserSex_Name(UserSex value) {
  return ::google::protobuf::internal::NameOfEnum(
    UserSex_descriptor(), value);
}
inline bool UserSex_Parse(
    const ::std::string& name, UserSex* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserSex>(
    UserSex_descriptor(), name, value);
}
// ===================================================================

class HeartBeat : public ::google::protobuf::Message {
 public:
  HeartBeat();
  virtual ~HeartBeat();

  HeartBeat(const HeartBeat& from);

  inline HeartBeat& operator=(const HeartBeat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeat& default_instance();

  void Swap(HeartBeat* other);

  // implements Message ----------------------------------------------

  inline HeartBeat* New() const { return New(NULL); }

  HeartBeat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartBeat& from);
  void MergeFrom(const HeartBeat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeartBeat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 tag = 1;
  void clear_tag();
  static const int kTagFieldNumber = 1;
  ::google::protobuf::uint32 tag() const;
  void set_tag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HeartBeat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 tag_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Basic_2eproto();
  friend void protobuf_AssignDesc_Basic_2eproto();
  friend void protobuf_ShutdownFile_Basic_2eproto();

  void InitAsDefaultInstance();
  static HeartBeat* default_instance_;
};
// -------------------------------------------------------------------

class CommonRequest : public ::google::protobuf::Message {
 public:
  CommonRequest();
  virtual ~CommonRequest();

  CommonRequest(const CommonRequest& from);

  inline CommonRequest& operator=(const CommonRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommonRequest& default_instance();

  void Swap(CommonRequest* other);

  // implements Message ----------------------------------------------

  inline CommonRequest* New() const { return New(NULL); }

  CommonRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CommonRequest& from);
  void MergeFrom(const CommonRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CommonRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 uid = 3;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CommonRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 uid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Basic_2eproto();
  friend void protobuf_AssignDesc_Basic_2eproto();
  friend void protobuf_ShutdownFile_Basic_2eproto();

  void InitAsDefaultInstance();
  static CommonRequest* default_instance_;
};
// -------------------------------------------------------------------

class ResponseHeader : public ::google::protobuf::Message {
 public:
  ResponseHeader();
  virtual ~ResponseHeader();

  ResponseHeader(const ResponseHeader& from);

  inline ResponseHeader& operator=(const ResponseHeader& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseHeader& default_instance();

  void Swap(ResponseHeader* other);

  // implements Message ----------------------------------------------

  inline ResponseHeader* New() const { return New(NULL); }

  ResponseHeader* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseHeader& from);
  void MergeFrom(const ResponseHeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResponseHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional bytes from = 3;
  void clear_from();
  static const int kFromFieldNumber = 3;
  const ::std::string& from() const;
  void set_from(const ::std::string& value);
  void set_from(const char* value);
  void set_from(const void* value, size_t size);
  ::std::string* mutable_from();
  ::std::string* release_from();
  void set_allocated_from(::std::string* from);

  // @@protoc_insertion_point(class_scope:ResponseHeader)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::internal::ArenaStringPtr from_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Basic_2eproto();
  friend void protobuf_AssignDesc_Basic_2eproto();
  friend void protobuf_ShutdownFile_Basic_2eproto();

  void InitAsDefaultInstance();
  static ResponseHeader* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// HeartBeat

// optional uint32 tag = 1;
inline void HeartBeat::clear_tag() {
  tag_ = 0u;
}
inline ::google::protobuf::uint32 HeartBeat::tag() const {
  // @@protoc_insertion_point(field_get:HeartBeat.tag)
  return tag_;
}
inline void HeartBeat::set_tag(::google::protobuf::uint32 value) {
  
  tag_ = value;
  // @@protoc_insertion_point(field_set:HeartBeat.tag)
}

// -------------------------------------------------------------------

// CommonRequest

// optional int32 id = 1;
inline void CommonRequest::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 CommonRequest::id() const {
  // @@protoc_insertion_point(field_get:CommonRequest.id)
  return id_;
}
inline void CommonRequest::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:CommonRequest.id)
}

// optional int32 type = 2;
inline void CommonRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CommonRequest::type() const {
  // @@protoc_insertion_point(field_get:CommonRequest.type)
  return type_;
}
inline void CommonRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:CommonRequest.type)
}

// optional int32 uid = 3;
inline void CommonRequest::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 CommonRequest::uid() const {
  // @@protoc_insertion_point(field_get:CommonRequest.uid)
  return uid_;
}
inline void CommonRequest::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:CommonRequest.uid)
}

// -------------------------------------------------------------------

// ResponseHeader

// optional int32 id = 1;
inline void ResponseHeader::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 ResponseHeader::id() const {
  // @@protoc_insertion_point(field_get:ResponseHeader.id)
  return id_;
}
inline void ResponseHeader::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ResponseHeader.id)
}

// optional int32 type = 2;
inline void ResponseHeader::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 ResponseHeader::type() const {
  // @@protoc_insertion_point(field_get:ResponseHeader.type)
  return type_;
}
inline void ResponseHeader::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ResponseHeader.type)
}

// optional bytes from = 3;
inline void ResponseHeader::clear_from() {
  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponseHeader::from() const {
  // @@protoc_insertion_point(field_get:ResponseHeader.from)
  return from_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseHeader::set_from(const ::std::string& value) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ResponseHeader.from)
}
inline void ResponseHeader::set_from(const char* value) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ResponseHeader.from)
}
inline void ResponseHeader::set_from(const void* value, size_t size) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ResponseHeader.from)
}
inline ::std::string* ResponseHeader::mutable_from() {
  
  // @@protoc_insertion_point(field_mutable:ResponseHeader.from)
  return from_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseHeader::release_from() {
  // @@protoc_insertion_point(field_release:ResponseHeader.from)
  
  return from_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseHeader::set_allocated_from(::std::string* from) {
  if (from != NULL) {
    
  } else {
    
  }
  from_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from);
  // @@protoc_insertion_point(field_set_allocated:ResponseHeader.from)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::UserSex> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::UserSex>() {
  return ::UserSex_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Basic_2eproto__INCLUDED
